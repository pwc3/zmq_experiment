// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: zmq_experiment.proto
// Protobuf C++ Version: 5.29.3

#ifndef zmq_5fexperiment_2eproto_2epb_2eh
#define zmq_5fexperiment_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h" // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_zmq_5fexperiment_2eproto

namespace google
{
  namespace protobuf
  {
    namespace internal
    {
      template <typename T>
      ::absl::string_view GetAnyMessageName();
    } // namespace internal
  } // namespace protobuf
} // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_zmq_5fexperiment_2eproto
{
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_zmq_5fexperiment_2eproto;
class PBAudioPacket;
struct PBAudioPacketDefaultTypeInternal;
extern PBAudioPacketDefaultTypeInternal _PBAudioPacket_default_instance_;
namespace google
{
  namespace protobuf
  {
  } // namespace protobuf
} // namespace google

// ===================================================================

// -------------------------------------------------------------------

class PBAudioPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PBAudioPacket) */ {
public:
  inline PBAudioPacket() : PBAudioPacket(nullptr) {}
  ~PBAudioPacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PBAudioPacket *msg, std::destroying_delete_t)
  {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PBAudioPacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PBAudioPacket(
      ::google::protobuf::internal::ConstantInitialized);

  inline PBAudioPacket(const PBAudioPacket &from) : PBAudioPacket(nullptr, from) {}
  inline PBAudioPacket(PBAudioPacket &&from) noexcept
      : PBAudioPacket(nullptr, std::move(from)) {}
  inline PBAudioPacket &operator=(const PBAudioPacket &from)
  {
    CopyFrom(from);
    return *this;
  }
  inline PBAudioPacket &operator=(PBAudioPacket &&from) noexcept
  {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena()))
    {
      InternalSwap(&from);
    }
    else
    {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND
  {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND
  {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor *descriptor()
  {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor *GetDescriptor()
  {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection *GetReflection()
  {
    return default_instance().GetMetadata().reflection;
  }
  static const PBAudioPacket &default_instance()
  {
    return *internal_default_instance();
  }
  static inline const PBAudioPacket *internal_default_instance()
  {
    return reinterpret_cast<const PBAudioPacket *>(
        &_PBAudioPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PBAudioPacket &a, PBAudioPacket &b) { a.Swap(&b); }
  inline void Swap(PBAudioPacket *other)
  {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena()))
    {
      InternalSwap(other);
    }
    else
    {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBAudioPacket *other)
  {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBAudioPacket *New(::google::protobuf::Arena *arena = nullptr) const
  {
    return ::google::protobuf::Message::DefaultConstruct<PBAudioPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PBAudioPacket &from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PBAudioPacket &from) { PBAudioPacket::MergeImpl(*this, from); }

private:
  static void MergeImpl(
      ::google::protobuf::MessageLite &to_msg,
      const ::google::protobuf::MessageLite &from_msg);

public:
  bool IsInitialized() const
  {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite &msg);
  static ::uint8_t *_InternalSerialize(
      const MessageLite &msg, ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream);

public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const
  {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t *_InternalSerialize(
      ::uint8_t *target,
      ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

private:
  void SharedCtor(::google::protobuf::Arena *arena);
  static void SharedDtor(MessageLite &self);
  void InternalSwap(PBAudioPacket *other);

private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PBAudioPacket"; }

protected:
  explicit PBAudioPacket(::google::protobuf::Arena *arena);
  PBAudioPacket(::google::protobuf::Arena *arena, const PBAudioPacket &from);
  PBAudioPacket(::google::protobuf::Arena *arena, PBAudioPacket &&from) noexcept
      : PBAudioPacket(arena)
  {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData *GetClassData() const PROTOBUF_FINAL;
  static void *PlacementNew_(const void *, void *mem,
                             ::google::protobuf::Arena *arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int
  {
    kSamplesFieldNumber = 2,
    kWavFilenameFieldNumber = 1,
  };
  // repeated float samples = 2;
  int samples_size() const;

private:
  int _internal_samples_size() const;

public:
  void clear_samples();
  float samples(int index) const;
  void set_samples(int index, float value);
  void add_samples(float value);
  const ::google::protobuf::RepeatedField<float> &samples() const;
  ::google::protobuf::RepeatedField<float> *mutable_samples();

private:
  const ::google::protobuf::RepeatedField<float> &_internal_samples() const;
  ::google::protobuf::RepeatedField<float> *_internal_mutable_samples();

public:
  // string wav_filename = 1;
  void clear_wav_filename();
  const std::string &wav_filename() const;
  template <typename Arg_ = const std::string &, typename... Args_>
  void set_wav_filename(Arg_ &&arg, Args_... args);
  std::string *mutable_wav_filename();
  PROTOBUF_NODISCARD std::string *release_wav_filename();
  void set_allocated_wav_filename(std::string *value);

private:
  const std::string &_internal_wav_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wav_filename(
      const std::string &value);
  std::string *_internal_mutable_wav_filename();

public:
  // @@protoc_insertion_point(class_scope:PBAudioPacket)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_
  {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena *arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena *arena, const Impl_ &from,
                          const PBAudioPacket &from_msg);
    ::google::protobuf::RepeatedField<float> samples_;
    ::google::protobuf::internal::ArenaStringPtr wav_filename_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union
  {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_zmq_5fexperiment_2eproto;
};

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// -------------------------------------------------------------------

// PBAudioPacket

// string wav_filename = 1;
inline void PBAudioPacket::clear_wav_filename()
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wav_filename_.ClearToEmpty();
}
inline const std::string &PBAudioPacket::wav_filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
  // @@protoc_insertion_point(field_get:PBAudioPacket.wav_filename)
  return _internal_wav_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PBAudioPacket::set_wav_filename(Arg_ &&arg,
                                                                   Args_... args)
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wav_filename_.Set(static_cast<Arg_ &&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PBAudioPacket.wav_filename)
}
inline std::string *PBAudioPacket::mutable_wav_filename() ABSL_ATTRIBUTE_LIFETIME_BOUND
{
  std::string *_s = _internal_mutable_wav_filename();
  // @@protoc_insertion_point(field_mutable:PBAudioPacket.wav_filename)
  return _s;
}
inline const std::string &PBAudioPacket::_internal_wav_filename() const
{
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wav_filename_.Get();
}
inline void PBAudioPacket::_internal_set_wav_filename(const std::string &value)
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wav_filename_.Set(value, GetArena());
}
inline std::string *PBAudioPacket::_internal_mutable_wav_filename()
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wav_filename_.Mutable(GetArena());
}
inline std::string *PBAudioPacket::release_wav_filename()
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:PBAudioPacket.wav_filename)
  return _impl_.wav_filename_.Release();
}
inline void PBAudioPacket::set_allocated_wav_filename(std::string *value)
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wav_filename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.wav_filename_.IsDefault())
  {
    _impl_.wav_filename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:PBAudioPacket.wav_filename)
}

// repeated float samples = 2;
inline int PBAudioPacket::_internal_samples_size() const
{
  return _internal_samples().size();
}
inline int PBAudioPacket::samples_size() const
{
  return _internal_samples_size();
}
inline void PBAudioPacket::clear_samples()
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.samples_.Clear();
}
inline float PBAudioPacket::samples(int index) const
{
  // @@protoc_insertion_point(field_get:PBAudioPacket.samples)
  return _internal_samples().Get(index);
}
inline void PBAudioPacket::set_samples(int index, float value)
{
  _internal_mutable_samples()->Set(index, value);
  // @@protoc_insertion_point(field_set:PBAudioPacket.samples)
}
inline void PBAudioPacket::add_samples(float value)
{
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_samples()->Add(value);
  // @@protoc_insertion_point(field_add:PBAudioPacket.samples)
}
inline const ::google::protobuf::RepeatedField<float> &PBAudioPacket::samples() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
  // @@protoc_insertion_point(field_list:PBAudioPacket.samples)
  return _internal_samples();
}
inline ::google::protobuf::RepeatedField<float> *PBAudioPacket::mutable_samples()
    ABSL_ATTRIBUTE_LIFETIME_BOUND
{
  // @@protoc_insertion_point(field_mutable_list:PBAudioPacket.samples)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_samples();
}
inline const ::google::protobuf::RepeatedField<float> &
PBAudioPacket::_internal_samples() const
{
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.samples_;
}
inline ::google::protobuf::RepeatedField<float> *PBAudioPacket::_internal_mutable_samples()
{
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.samples_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif // zmq_5fexperiment_2eproto_2epb_2eh
